#include<iostream>
#include<omp.h>

using namespace std;

int minval(int arr[], int n){
    int minval = arr[0];
    #pragma omp parallel for reduction(min:minval)
      for(int i=0; i<n; i++){
          if(arr[i]<minval)
          minval = arr[i];
      }
      return minval;
}

int maxval(int arr[], int n){
    int maxval = arr[0];
    #pragma omp parallel for reduction(max:maxval)
      for(int i=0; i<n; i++){
          if(arr[i]>maxval)
          maxval = arr[i];
      }
      return maxval;
}

int sum(int arr[], int n){
    int sum = 0;
    #pragma omp parallel for reduction(+:sum)
      for(int i=0; i<n; i++){
          sum += arr[i];
      }
      return sum;
}

int average(int arr[], int n){
    return (double)sum(arr,n)/n;
}

int main(){
    int n;
    cout<<"Enter the size of array: ";
    cin>>n;
    
    int arr[n];
    cout<<"Enter the elements of array:\n";
    for(int i=0;i<n;i++){
        cout<<"Element"<<i+1<<": ";
        cin>>arr[i];
    }
     
    cout<<"The minimum value is: "<<minval(arr,n)<<'\n'; 
    cout<<"The maximum value is: "<<maxval(arr,n)<<'\n'; 
    cout<<"The sum value is: "<<sum(arr,n)<<'\n'; 
    cout<<"The avg value is: "<<average(arr,n)<<'\n'; 
    
    return 0;
    
}









